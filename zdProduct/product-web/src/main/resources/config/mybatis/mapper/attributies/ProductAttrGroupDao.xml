<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zhaidou.product.attributies.dao.impl.ProductAttrGroupDaoImpl">
	
	<resultMap type="ProductAttrGroupModel" id="productAttrGroupModel">
		   <result property="groupId" column="group_id" javaType="java.lang.Long" />
		   <result property="groupCode" column="group_code" javaType="java.lang.String" />
		   <result property="groupName" column="group_name" javaType="java.lang.String" />
		   <result property="groupStatus" column="group_status" javaType="java.lang.Integer" />
		   <result property="updateTime" column="update_time" javaType="java.lang.Long" />
		   <result property="updateUser" column="update_user" javaType="java.lang.String" />
		   <result property="createTime" column="create_time" javaType="java.lang.Long" />
		   <result property="creator" column="creator" javaType="java.lang.String" />
	</resultMap>


<insert id="insert" parameterType="ProductAttrGroupModel" useGeneratedKeys="true" keyProperty="groupId">
		<!-- <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
    		SELECT @@IDENTITY as id
    	</selectKey> -->
		insert into  t_product_attr_group
		(
	          			    group_id,
	          			    group_code,
	          			    group_name,
	          			    group_status,
	          				update_user,
	          			    create_time,
	          			    update_time,
	          			    creator
        )
		values
		(
		          			    #{groupId},
		          			    #{groupCode},
		          			    #{groupName},
		          			    #{groupStatus},
		          				#{updateUser},
		          			    #{createTime},
		          			    #{updateTime},
	          				    #{creator}
        )
	</insert>

	<update id="update" parameterType="ProductAttrGroupModel">
		update  t_product_attr_group t 
		  <set>
			        <if test="groupCode != null  and groupCode !=''">
				          t.group_code=#{groupCode},
				    </if>
			        <if test="groupName != null  and groupName !=''">
				          t.group_name=#{groupName},
				    </if>
			        <if test="groupStatus != null  and groupStatus !=''">
				          t.group_status=#{groupStatus},
				    </if>
			        <if test="updateTime != null  and updateTime !=''">
				          t.update_time=#{updateTime},
				    </if>
			        <if test="updateUser != null  and updateUser !=''">
				          t.update_user=#{updateUser},
				    </if>
			        <if test="createTime != null  and createTime !=''">
				          t.create_time=#{createTime},
				    </if>
			        <if test="creator != null  and creator !=''">
				          t.creator=#{creator}
				    </if>
		    </set>
		where 
		t.group_id = #{groupId}
	</update>
	
	<delete id="delete" parameterType="java.lang.Long">
    	update t_product_attr_group set group_status = 3 where group_id=#{groupId}
    </delete>
    
    <delete id="deleteByIds" parameterType="java.util.List">
    	delete from t_product_attr_group  where 
    	 in
    	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>

    <sql id="query">
	        <if test="groupId != null and groupId !=''">
					and t.group_id=#{groupId}
		    </if>
	        <if test="groupCode != null and groupCode !=''">
		        	and t.group_code like CONCAT(CONCAT('%', #{groupCode}), '%') 
		    </if>
	        <if test="groupName != null and groupName !=''">
		        	and t.group_name like CONCAT(CONCAT('%', #{groupName}), '%') 
		    </if>
	        <if test="groupStatus != null and groupStatus !=''">
					and t.group_status=#{groupStatus}
		    </if>
	        <if test="updateTime != null and updateTime !=''">
					and t.update_time<![CDATA[>=]]>#{updateTime}
		    </if>
		    <if test="endTime2 != null and endTime2 !=''">
					and t.update_time<![CDATA[<=]]>#{endTime2}
		    </if>
	        <if test="updateUser != null and updateUser !=''">
		        	and t.update_user like CONCAT(CONCAT('%', #{updateUser}), '%') 
		    </if>
	        <if test="createTime != null and createTime !=''">
					and t.create_time<![CDATA[>=]]>#{createTime}
		    </if>
		    <if test="endTime1 != null and endTime1 !=''">
					and t.create_time<![CDATA[<=]]>#{endTime1}
		    </if>
	        <if test="creator != null and creator !=''">
		        	and t.creator like CONCAT(CONCAT('%', #{creator}), '%') 
		    </if>
	    
    </sql>

  <select id="queryOne" parameterType="java.lang.Long"
	resultMap="productAttrGroupModel">
	select
	          group_id,
	          group_code,
	          group_name,
	          group_status,
	          update_time,
	          update_user,
	          create_time,
	          creator
	from  t_product_attr_group t
	where t.group_id =#{groupId} and t.group_status != 3
	</select>
	<select id="queryListPage" parameterType="ProductAttrGroupModel"
		resultMap="productAttrGroupModel">
		select 
	          group_id,
	    
	          group_code,
	    
	          group_name,
	    
	          group_status,
	    
	          update_time,
	    
	          update_user,
	    
	          create_time,
	    
	          creator
	     from  t_product_attr_group t
		where t.group_status != 3
		<include refid="query"/>
	</select>

	<select id="countListPage" parameterType="ProductAttrGroupModel"
		resultType="java.lang.Long">
		select count(1) from  t_product_attr_group t
		where t.group_status != 3
		<include refid="query"/>
	 </select>

	<select id="queryAttrGroupByName" parameterType="java.lang.String"
		resultMap="productAttrGroupModel">
		select 
	          group_id,
	    
	          group_code,
	    
	          group_name,
	    
	          group_status,
	    
	          update_time,
	    
	          update_user,
	    
	          create_time,
	    
	          creator
	     from  t_product_attr_group t
		where  t.group_name like CONCAT(CONCAT('%', #{groupName}), '%') and t.group_status != 3
	</select>

	<select id="getMaxId" resultType="java.lang.Long">
		select  ifnull(max(group_id),0)+1  from  t_product_attr_group 
	</select>

	<select id="queryByCategoryId" parameterType="java.lang.Long"
		resultMap="productAttrGroupModel">
		select
		    t2.group_id as group_id,
	        t2.group_code as group_code,
	        t2.group_name as group_name
		from
		    t_relation_cate_group t1
		        join
		    t_product_attr_group t2 on t1.group_id = t2.group_id
		        and t1.category_id = #{categoryId}
		        and t2.group_status = 1
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductSkuDaoImpl">
	
	<resultMap type="ProductSkuModel" id="productSkuModel">
		   <result property="productSkuId" column="product_sku_id" javaType="java.lang.Long" />
		   <result property="productSkuCode" column="product_sku_code" javaType="java.lang.String" />
		   <result property="productId" column="product_id" javaType="java.lang.Long" />
		   <result property="attrColorName" column="attr_color_name" javaType="java.lang.String" />
		   <result property="attrColorValue" column="attr_color_value" javaType="java.lang.String" />
		   <result property="attrSpecName" column="attr_spec_name" javaType="java.lang.String" />
		   <result property="attrSpecValue" column="attr_spec_value" javaType="java.lang.String" />
		   <result property="mainSku" column="main_sku" javaType="java.lang.Long" />
		   <result property="colorValueAlias" column="color_value_alias" javaType="java.lang.String" />
		   <result property="specValueAlias" column="spec_value_alias" javaType="java.lang.String" />
		   <result property="status" column="status" javaType="java.lang.Integer" />
		   <result property="reason" column="reason" javaType="java.lang.String" />
		   <result property="isAvailable" column="is_available" javaType="java.lang.Integer" />
		   <result property="supplierSkuCode" column="supplier_sku_code" javaType="java.lang.String" />
	</resultMap>
	
	<resultMap type="ProductSkuExportModel" id="productSkuExportModel">
		<result property="productSkuId" column="product_sku_id"
			javaType="java.lang.Long" />
		<result property="catName" column="cat_name" javaType="java.lang.String" />
		<result property="catCode" column="cat_code" javaType="java.lang.String" />
		<result property="shopId" column="shop_id" javaType="java.lang.Long" />
		<result property="supplierId" column="supplier_id" javaType="java.lang.Long" />
		<result property="shopName" column="shop_name" javaType="java.lang.String" />
		<result property="brandCode" column="brand_code" javaType="java.lang.String" />
		<result property="brandName" column="brand_name" javaType="java.lang.String" />
		<result property="productSkuCode" column="product_sku_code"
			javaType="java.lang.String" />
		<result property="productCode" column="product_code" javaType="java.lang.String" />
		<result property="productName" column="product_name" javaType="java.lang.String" />
		<result property="type" column="type" javaType="java.lang.String" />
		<result property="marketPrice" column="market_price" javaType="java.lang.String" />
		<result property="tshPrice" column="tsh_price" javaType="java.lang.Double" />
		<result property="maxTshPrice" column="max_tsh_price" javaType="java.lang.Double" />
		<result property="minTshPrice" column="min_tsh_price" javaType="java.lang.Double" />
		<result property="tb" column="tb" javaType="java.lang.String" />
		<result property="costPrice" column="cost_price" javaType="java.lang.String" />
		<result property="status" column="status" javaType="java.lang.String" />
		<result property="productShelves" column="product_shelves" javaType="java.lang.String" />
		<result property="createTime" column="create_time" javaType="java.lang.String" />
		<result property="firstShelvesTime" column="first_shelves_time"
			javaType="java.lang.String" />
		<result property="virtualStock" column="virtual_stock"
			javaType="java.lang.String" />
		<result property="productWeight" column="product_weight"
			javaType="java.lang.String" />
	</resultMap>

    <sql id="query">
	        <if test="productSkuId != null and productSkuId !=''">
					and t.product_sku_id=#{productSkuId}
		    </if>
		    <if test="productSkuCode != null and productSkuCode !=''">
					and t.product_sku_code=#{productSkuCode}
		    </if>
	        <if test="productId != null and productId !=''">
					and t.product_id=#{productId}
		    </if>
	        <if test="attrColorName != null and attrColorName !=''">
		        	and t.attr_color_name like CONCAT(CONCAT('%', #{attrColorName}), '%') 
		    </if>
	        <if test="attrColorValue != null and attrColorValue !=''">
		        	and t.attr_color_value like CONCAT(CONCAT('%', #{attrColorValue}), '%') 
		    </if>
	        <if test="attrSpecName != null and attrSpecName !=''">
		        	and t.attr_spec_name like CONCAT(CONCAT('%', #{attrSpecName}), '%') 
		    </if>
	        <if test="attrSpecValue != null and attrSpecValue !=''">
		        	and t.attr_spec_value like CONCAT(CONCAT('%', #{attrSpecValue}), '%') 
		    </if>
	        <if test="mainSku != null and mainSku !=''">
					and t.main_sku=#{mainSku}
		    </if>
		    <if test="colorValueAlias != null and colorValueAlias !=''">
		        	and t.color_value_alias like CONCAT(CONCAT('%', #{colorValueAlias}), '%') 
		    </if>
		    <if test="specValueAlias != null and specValueAlias !=''">
		        	and t.spec_value_alias like CONCAT(CONCAT('%', #{specValueAlias}), '%') 
		    </if>
		    <if test="status != null and status !=''">
		        	and t.status=#{status} 
		    </if>
		    <if test="isAvailable != null and isAvailable !=''">
		        	and t.is_available=#{isAvailable} 
		    </if>
	    	<if test="supplierSkuCode != null and supplierSkuCode !=''">
		        	and t.supplier_sku_code=#{supplierSkuCode} 
		    </if>
    </sql>


	<select id="queryOne" parameterType="ProductSkuModel"
	resultMap="productSkuModel">
	select
	          product_sku_id,
	          product_sku_code,
	          product_id,
	          attr_color_name,
	          attr_color_value,
	          attr_spec_name,
	          attr_spec_value,
	          color_value_alias,
	          spec_value_alias,
	          status,
	          reason,
	          is_available,
	          main_sku,
	          supplier_sku_code
	from  t_product_sku t
	where t.product_sku_id=#{productSkuId};
	</select>
	<select id="queryListPage" parameterType="ProductSkuModel"
		resultMap="productSkuModel">
		select 
	          product_sku_id,
	    	  product_sku_code,
	          product_id,
	          attr_color_name,
	          attr_color_value,
	          attr_spec_name,
	          attr_spec_value,
	    	  color_value_alias,
	          spec_value_alias,
	          status,
	          reason,
	          is_available,
	          main_sku,
	          supplier_sku_code
	     from  t_product_sku t
		where 1=1
		<include refid="query"/>
	</select>

	<select id="countListPage" parameterType="ProductSkuModel"
		resultType="java.lang.Long">
		select count(1) from  t_product_sku t
		where 1=1
		<include refid="query"/>
	 </select>
	
	<select id="getDelSku" parameterType="java.lang.Long" resultMap="productSkuModel">
		select product_sku_code from t_product_sku where is_available=2 and product_id=#{productId}
	</select>
	
	<insert id="insert" parameterType="ProductSkuModel">
		<selectKey resultType="java.lang.Long" keyProperty="productSkuId" order="AFTER">
    		SELECT @@IDENTITY as productSkuId
    	</selectKey>
		insert into  t_product_sku
		(
	          			    product_sku_id,
	          			    product_sku_code,
	          			    product_id,
	          				attr_color_name,
	          			    attr_color_value,
	          			    attr_spec_name,
	          			    attr_spec_value,
	          			    color_value_alias,
	          				spec_value_alias,
	          				status,
	          				reason,
	          				is_available,
	          				main_sku,
	          				supplier_sku_code
        )
		values
		(
		          			    #{productSkuId},
		          			    #{productSkuCode},
		          			    #{productId},
		          				#{attrColorName},
		          			    #{attrColorValue},
		          			    #{attrSpecName},
		          			    #{attrSpecValue},
		          			    #{colorValueAlias},
		          			    #{specValueAlias},
		          			    #{status},
		          			    #{reason},
		          			    #{isAvailable},
	          					#{mainSku},
	          					#{supplierSkuCode}
        )
	</insert>
	
	<update id="update" parameterType="ProductSkuModel">
		update  t_product_sku t 
		  <set>
			         <if test="productId != null  and productId !=''">
				          t.product_id=#{productId},
				    </if>
			         <if test="attrColorName != null  and attrColorName !=''">
				          t.attr_color_name=#{attrColorName},
				    </if>
			         <if test="attrColorValue != null  and attrColorValue !=''">
				          t.attr_color_value=#{attrColorValue},
				    </if>
			         <if test="attrSpecName != null  and attrSpecName !=''">
				          t.attr_spec_name=#{attrSpecName},
				    </if>
			         <if test="attrSpecValue != null  and attrSpecValue !=''">
				          t.attr_spec_value=#{attrSpecValue},
				    </if>
				    <if test="colorValueAlias != null  and colorValueAlias !=''">
				          t.color_value_alias=#{colorValueAlias},
				    </if>
				    <if test="specValueAlias != null  and specValueAlias !=''">
				          t.spec_value_alias=#{specValueAlias},
				    </if>
				    <if test="status != null  and status !=''">
				          t.status=#{status},
				    </if>
				    <if test="reason != null">
				          t.reason=#{reason},
				    </if>
			         <if test="mainSku != null ">
				          t.main_sku=#{mainSku},
				    </if>
				    <if test="isAvailable != null  and isAvailable !=''">
				          t.is_available=#{isAvailable},
				    </if>
				    <if test="supplierSkuCode != null">
				          t.supplier_sku_code=#{supplierSkuCode},
				    </if>
				    <if test="productSkuCode != null  and productSkuCode !=''">
				          t.product_sku_code=#{productSkuCode}
				    </if>
		    </set>
		where 
		t.product_sku_id=#{productSkuId};
	</update>
	
	<update id="updateByIds" parameterType="java.util.Map">
		update t_product_sku set is_available=#{isAvailable}  where product_id=#{productId}
    	 <if test="list != null  and list.size > 0">
			and product_sku_id not in 
	    	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
				#{item}
			</foreach>
		 </if>
	</update>
	
	<delete id="delete" parameterType="ProductSkuModel">
    	delete from  t_product_sku  where  product_sku_id=#{productSkuId};
    </delete>
    
    <delete id="deleteByIds" parameterType="java.util.Map">
    	delete from t_product_sku   where product_id=#{productId}
    	 <if test="list != null  and list.size > 0">
			and product_sku_id in 
	    	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
				#{item}
			</foreach>
		 </if>
    </delete>
	
	<select id="getSkuByProductId" parameterType="ProductSkuModel" resultMap="productSkuModel">
		select 
			  product_sku_id,
			  product_sku_code,
	          product_id,
	          attr_color_name,
	          attr_color_value,
	          attr_spec_name,
	          attr_spec_value,
	          color_value_alias,
	          spec_value_alias,
	          status,
	          reason,
	          is_available,
	          main_sku,
	          supplier_sku_code
	    from t_product_sku where product_id=#{productId}
	</select>
	<select id="getProductSkuListByProductId" parameterType="java.util.List" resultMap="productSkuModel">
		select 
			  product_sku_id,
			  product_sku_code,
	          product_id,
	          attr_color_name,
	          attr_color_value,
	          attr_spec_name,
	          attr_spec_value,
	          color_value_alias,
	          spec_value_alias,
	          status,
	          reason,
	          is_available,
	          main_sku,
	          supplier_sku_code
	    from t_product_sku where product_id in
	    	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
				#{item}
			</foreach>
	</select>
	
	
	<select id="queryProductSkuExportModel" parameterType="ProductSkuExportModel"
		resultMap="productSkuExportModel">
		SELECT
		sku.product_sku_id,
		p.cat_name,
		p.cat_code,
		shop.id shop_id,
		shop.supplier_id,
		shop.name shop_name,
		p.brand_code,
		p.brand_name,
		sku.product_sku_code,
		p.product_code,
		p.product_name,
		price.market_price,
		price.tsh_price,
		price.tb,
		price.cost_price,
		case
		when p.staus=0 then '待处理'
		when
		p.staus=1 then '待审核'
		when p.staus=2 then '审核通过'
		when p.staus=3 then
		'待同步'
		when p.staus=4 then '同步成功'
		when p.staus=9 then '处理失败'
		end status,
		case
		when p.product_shelves=1 then '上架'
		when p.product_shelves=0 then '下架'
		end product_shelves,
		from_unixtime(p.create_time, '%Y-%m-%d %H:%i:%S') create_time,
		from_unixtime(p.first_shelves_time, '%Y-%m-%d %H:%i:%S') 

		first_shelves_time,
		stock.virtual_stock,
		mall.product_weight,
		op.product_price_rate priceRate
		FROM
		t_product_sku sku
		INNER JOIN
		t_product p ON sku.product_id = p.product_id
		INNER JOIN
		t_product_operate op ON op.product_id = p.product_id
		INNER JOIN t_product_mall
		mall ON mall.product_id = p.product_id
		INNER JOIN t_supplier_shop shop
		ON shop.id = p.shop_id
		INNER JOIN t_product_stock stock ON stock.sku_id
		= sku.product_sku_id
		INNER JOIN t_product_price price ON price.product_sku_code=sku.product_sku_code
		WHERE sku.is_available=1
		<if test="productName !=null and productName !=''">
			and p.product_name like CONCAT(CONCAT('%',
			#{productName}), '%')
		</if>
		<if test="productCode !=null and productCode !=''">
			and p.product_code like CONCAT(CONCAT('%',
			#{productCode}), '%')
		</if>

		<if test="brandName !=null and brandName !=''">
			and p.brand_name like CONCAT(CONCAT('%', #{brandName}),
			'%')
		</if>

		<if test="type !=null and type !=''">
			and p.type like CONCAT(CONCAT('%', #{type}), '%')
		</if>

		<if test="maxTshPrice !=null and maxTshPrice !=''">
			and p.tsh_price &lt; #{maxTshPrice}
		</if>

		<if test="minTshPrice !=null and minTshPrice !=''">
			and p.tsh_price &gt; #{minTshPrice}
		</if>

		<if test="catCode != null and catCode !=''">
			and 
			case when
			LENGTH(#{catCode})= 6 then p.cat_code=#{catCode}
			 when
			LENGTH(#{catCode})= 2 then substring(p.cat_code,1,2)=#{catCode}
			when
			LENGTH(#{catCode})= 4 then substring(p.cat_code,1,4)=#{catCode}
			END
		</if>
		<if test="catName != null and catName !=''">
			and p.cat_name like CONCAT(CONCAT('%', #{catName}), '%')
		</if>
		
		<if test="productShelves != null and productShelves !=''">
			and p.product_shelves =#{productShelves}
		</if>		
		<if test="supplierId != null and supplierId !=''">
			and shop.supplier_id=#{supplierId}
		</if>
		<if test="shopId != null and shopId !=''">
			and shop_id=#{shopId}
		</if>
		<if test="startTime != null and startTime !=''">
			and p.create_time<![CDATA[>=]]>#{startTime}
		</if>
		<if test="endTime != null and endTime !=''">
			and p.create_time<![CDATA[<=]]>#{endTime}
		</if>
		<if test="supplierName != null and supplierName !=''">
			and shop.name like CONCAT(CONCAT('%', #{supplierName}), '%')
		</if>
	</select>
	
	<select id="queryProductSkuExportCount" parameterType="ProductSkuExportModel"
		resultType="java.lang.Long">
		SELECT
		count(p.product_id)
		FROM
		t_product_sku sku
		LEFT JOIN
		t_product p ON sku.product_id = p.product_id
		LEFT JOIN t_product_mall
		mall ON mall.product_id = p.product_id
		LEFT JOIN t_supplier_shop shop
		ON shop.id = p.shop_id
		LEFT JOIN t_product_stock stock ON stock.sku_id
		= sku.product_sku_id
		WHERE sku.is_available=1
		<if test="productName !=null and productName !=''">
			and p.product_name like CONCAT(CONCAT('%',
			#{productName}), '%')
		</if>
		<if test="productCode !=null and productCode !=''">
			and p.product_code like CONCAT(CONCAT('%',
			#{productCode}), '%')
		</if>

		<if test="brandName !=null and brandName !=''">
			and p.brand_name like CONCAT(CONCAT('%', #{brandName}),
			'%')
		</if>

		<if test="type !=null and type !=''">
			and p.type like CONCAT(CONCAT('%', #{type}), '%')
		</if>

		<if test="maxTshPrice !=null and maxTshPrice !=''">
			and p.tsh_price &lt; #{maxTshPrice}
		</if>

		<if test="minTshPrice !=null and minTshPrice !=''">
			and p.tsh_price &gt; #{minTshPrice}
		</if>

		<if test="catCode != null and catCode !=''">
			and 
			case when
			LENGTH(#{catCode})= 6 then p.cat_code=#{catCode}
			 when
			LENGTH(#{catCode})= 2 then substring(p.cat_code,1,2)=#{catCode}
			when
			LENGTH(#{catCode})= 4 then substring(p.cat_code,1,4)=#{catCode}
			END
		</if>
		<if test="catName != null and catName !=''">
			and p.cat_name like CONCAT(CONCAT('%', #{catName}), '%')
		</if>
		
		<if test="productShelves != null and productShelves !=''">
			and p.product_shelves =#{productShelves}
		</if>		
		<if test="supplierId != null and supplierId !=''">
			and shop.supplier_id=#{supplierId}
		</if>
		<if test="shopId != null and shopId !=''">
			and shop_id=#{shopId}
		</if>
		<if test="startTime != null and startTime !=''">
			and p.create_time<![CDATA[>=]]>#{startTime}
		</if>
		<if test="endTime != null and endTime !=''">
			and p.create_time<![CDATA[<=]]>#{endTime}
		</if>
		<if test="supplierName != null and supplierName !=''">
			and shop.name like CONCAT(CONCAT('%', #{supplierName}), '%')
		</if>
	</select>
</mapper>